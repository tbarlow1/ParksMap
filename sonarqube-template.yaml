apiVersion: v1
kind: Template
metadata:
  name: tjb-sonarqube
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${SERVICE_NAME}-pvc
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: ${SERVICE_NAME}
      deploymentconfig: ${SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    tags:
    - from:
        kind: DockerImage
        name: docker.io/wkulhanek/sonarqube:${SONARQUBE_VERSION}
      name: ${SONARQUBE_VERSION}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${SERVICE_NAME}
    strategy:
      recreateParams:
        timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          app: ${SERVICE_NAME}
          deploymentconfig: ${SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            value: ${SONARQUBE_DB_PASS}
          - name: SONARQUBE_JDBC_URL
            value: ${SONARQUBE_DB_URL}
          - name: SONARQUBE_JDBC_USERNAME
            value: ${SONARQUBE_DB_USER}
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 40
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${SERVICE_NAME}
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /about
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: ${MAX_CPU}
              memory: ${MAX_MEMORY}
            requests:
              cpu: 1
              memory: 1536Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: ${SERVICE_NAME}-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${SERVICE_NAME}-volume-1
          persistentVolumeClaim:
            claimName: ${SERVICE_NAME}-pvc
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${SERVICE_NAME}:${SONARQUBE_VERSION}
      type: ImageChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    port:
      targetPort: 9000-tcp
    to:
      kind: Service
      name: ${SERVICE_NAME}
      weight: 100
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 4Gi
parameters:
- displayName: Sonarqube Service Name
  name: SERVICE_NAME
  required: true
  value: sonarqube
- displayName: Sonarqube Version
  name: SONARQUBE_VERSION
  required: true
  value: 6.7.3
- displayName: Sonarqube Database URL
  name: SONARQUBE_DB_URL
  required: true
  value: jdbc:postgresql://postgresql/sonar
- displayName: Sonarqube Database Username
  name: SONARQUBE_DB_USER
  value: sonar
- displayName: Sonarqube Database Password
  name: SONARQUBE_DB_PASS
  value: sonar
- displayName: Max CPU Usage for Sonarqube
  name: MAX_CPU
  value: "2"
- displayName: Max Memory Usage for Sonarqube
  name: MAX_MEMORY
  value: 3Gi
